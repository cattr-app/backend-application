pages:
  image: node:14-alpine
  stage: deploy
  only:
    - release
  before_script:
    - npm ci
  script:
    - npm run custom-api
    - mv apidoc public
  artifacts:
    paths:
      - public

live_deploy:
  image: alpine
  stage: deploy
  only:
    - pre-release
  before_script:
    - 'which ssh-agent || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$CI_KEY" | base64 -d | ssh-add -
    - mkdir ~/.ssh
    - ssh-keyscan -H $CI_HOST >> ~/.ssh/known_hosts
  script:
    - ssh $CI_USER@$CI_HOST 'cd cattr/backend && git pull'
    - ssh $CI_USER@$CI_HOST 'cd cattr/backend && git submodule update --init'
    - ssh $CI_USER@$CI_HOST 'cd cattr/backend && composer7.4 install'
    - ssh $CI_USER@$CI_HOST 'cd cattr/backend && sentry-cli releases new $(php7.4 artisan cattr:version)'
    - ssh $CI_USER@$CI_HOST 'cd cattr/backend && sentry-cli releases set-commits $(php7.4 artisan cattr:version) --auto'
    - ssh $CI_USER@$CI_HOST 'php7.4 cattr/backend/artisan config:cache'
    - ssh $CI_USER@$CI_HOST 'php7.4 cattr/backend/artisan migrate --force'
    - ssh $CI_USER@$CI_HOST 'cd cattr/backend && sentry-cli releases deploys $(php7.4 artisan cattr:version) new -e $(cat .env | grep "APP_ENV=.*" | cut -d"=" -f 2)'
    - ssh $CI_USER@$CI_HOST 'cd cattr/backend && sentry-cli releases finalize $(php7.4 artisan cattr:version)'

staging_deploy:
  image: alpine
  stage: deploy
  only:
    - staging
  before_script:
    - 'which ssh-agent || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$STAGING_KEY" | base64 -d | ssh-add -
    - mkdir ~/.ssh
    - ssh-keyscan -H $STAGING_HOST >> ~/.ssh/known_hosts
  script:
    - ssh $STAGING_USER@$STAGING_HOST 'cd backend && git pull'
    - ssh $STAGING_USER@$STAGING_HOST 'cd backend && git submodule update --init'
    - ssh $STAGING_USER@$STAGING_HOST 'cd backend && composer install'
    - ssh $STAGING_USER@$STAGING_HOST 'cd backend && composer dump-autoload'
    - ssh $STAGING_USER@$STAGING_HOST 'cp -f backend/.env.staging backend/.env && cat backend/.env.sentry >> backend/.env'
    - ssh $STAGING_USER@$STAGING_HOST 'cd backend && sentry-cli releases new $(php artisan cattr:version)'
    - ssh $STAGING_USER@$STAGING_HOST 'cd backend && sentry-cli releases set-commits $(php artisan cattr:version) --auto'
    - ssh $STAGING_USER@$STAGING_HOST 'php backend/artisan route:clear'
    - ssh $STAGING_USER@$STAGING_HOST 'php backend/artisan cache:clear'
    - ssh $STAGING_USER@$STAGING_HOST 'php backend/artisan config:cache'
    - ssh $STAGING_USER@$STAGING_HOST 'php backend/artisan migrate --force'
    - ssh $STAGING_USER@$STAGING_HOST 'cd backend && sentry-cli releases deploys $(php artisan cattr:version) new -e $(cat .env | grep "APP_ENV=.*" | cut -d"=" -f 2)'
    - ssh $STAGING_USER@$STAGING_HOST 'cd backend && sentry-cli releases finalize $(php artisan cattr:version)'

demo_deploy:
  image: alpine
  stage: deploy
  only:
    - release
  before_script:
    - 'which ssh-agent || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$DEMO_KEY" | base64 -d | ssh-add -
    - mkdir ~/.ssh
    - ssh-keyscan -H $DEMO_HOST >> ~/.ssh/known_hosts
  script:
    - ssh $DEMO_USER@$DEMO_HOST 'cd cattr/demo && docker-compose build --no-cache --force-rm demo'
    - ssh $DEMO_USER@$DEMO_HOST 'cd cattr/demo && docker-compose down -v && docker-compose up -d demo'
